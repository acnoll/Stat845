"0","kmTable=data.frame()
getKMTable = function(censoredTimesVector,censorSymbol){
  #get numeric representation of censor vector
  censoredTimesVectorNumeric=as.numeric(sub(censorSymbol,'',censoredTimesVector,fixed=TRUE))
  #count number of actual rows in KM table
  cnt_n=length(censoredTimesVectorNumeric)
  #create first row of KM table
  kmTable=setNames(data.frame(matrix(nrow=1,c(0,0,0,cnt_n,as.character(""-""),as.character(paste0(cnt_n,""/"",cnt_n)),1)),stringsAsFactors=FALSE),c(""orderedEventTimes_tj"",""eventsAtEventTime_ej"",
  ""censoredObservationsInInterval_cj"",""inRiskSetAtTime_nj"",""kaplanMeirSurvivalCurveAtTime_s_tj-1"",""c_tj-1"",""kaplanMeirSurvivalCurveAtTime_s_tj""))
  censoredTimesVectorNumeric=sort(censoredTimesVectorNumeric)
  for (i in 1:max(censoredTimesVectorNumeric)){
    if(i %in% censoredTimesVectorNumeric){
      #create empty row to fill in
      kmTableRow=setNames(data.frame(matrix(NA,nrow=1,ncol=length(names(kmTable)))),names(kmTable))
      kmTableRow$orderedEventTimes_tj=i
      #count how many events at time
      kmTableRow$eventsAtEventTime_ej=length(which(censoredTimesVector==i))
      #count how many censured at time
      kmTableRow$censoredObservationsInInterval_cj=length(which(censoredTimesVector==paste0(i,censorSymbol)))
      kmTableRow$inRiskSetAtTime_nj=cnt_n
      #sum events and number censored at time
      loss=kmTableRow$eventsAtEventTime_ej+kmTableRow$censoredObservationsInInterval_cj
      prevSurv=kmTable[dim(kmTable)[1],c(""kaplanMeirSurvivalCurveAtTime_s_tj"")]
      kmTableRow[c(""kaplanMeirSurvivalCurveAtTime_s_tj-1"")]=prevSurv
      kmTableRow[c(""c_tj-1"")]=paste0((cnt_n-loss),""/"",cnt_n)
      #kmTableRow$kaplanMeirSurvivalCurveAtTime_s_tj=round((cnt_n-loss)/length(censoredTimesVectorNumeric),3)
      kmTableRow$kaplanMeirSurvivalCurveAtTime_s_tj=round((cnt_n-loss)/cnt_n)*as.numeric(prevSurv),3)
"
"2","Error: unexpected ',' in:
""      #kmTableRow$kaplanMeirSurvivalCurveAtTime_s_tj=round((cnt_n-loss)/length(censoredTimesVectorNumeric),3)
      kmTableRow$kaplanMeirSurvivalCurveAtTime_s_tj=round((cnt_n-loss)/cnt_n)*as.numeric(prevSurv),""
"
